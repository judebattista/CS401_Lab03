/*

Xilinx Vivado v2018.2.1 (64-bit) [Major: 2018, Minor: 2]
SW Build: 2288692 on Thu Jul 26 18:24:02 MDT 2018
IP Build: 2289599 on Thu Jul 26 21:09:20 MDT 2018

Process ID: 992
License: Customer

Current time: 	Sat Mar 02 15:33:08 PST 2019
Time zone: 	Pacific Standard Time (America/Los_Angeles)

OS: Windows 10
OS Version: 10.0
OS Architecture: amd64
Available processors (cores): 8

Screen size: 1920x1080
Screen resolution (DPI): 96
Available screens: 2
Available disk space: 97 GB
Default font: family=Dialog,name=Dialog,style=plain,size=12

Java version: 	1.8.0_112 64-bit
Java home: 	C:/Xilinx/Vivado/2018.2/tps/win64/jre
Java executable location: 	C:/Xilinx/Vivado/2018.2/tps/win64/jre/bin/java.exe
Java initial memory (-Xms): 	128 MB
Java maximum memory (-Xmx):	 2 GB


User name: 	jabbott19
User home directory: C:/Users/jabbott19
User working directory: Z:/CS-401-1-CompArch/MIPS_3/mips_fpga_nexsys4_ddr
User country: 	US
User language: 	en
User locale: 	en_US

RDI_BASEROOT: C:/Xilinx/Vivado
HDI_APPROOT: C:/Xilinx/Vivado/2018.2
RDI_DATADIR: C:/Xilinx/Vivado/2018.2/data
RDI_BINDIR: C:/Xilinx/Vivado/2018.2/bin

Vivado preferences file location: C:/Users/jabbott19/AppData/Roaming/Xilinx/Vivado/2018.2/vivado.xml
Vivado preferences directory: C:/Users/jabbott19/AppData/Roaming/Xilinx/Vivado/2018.2/
Vivado layouts directory: C:/Users/jabbott19/AppData/Roaming/Xilinx/Vivado/2018.2/layouts
PlanAhead jar file location: 	C:/Xilinx/Vivado/2018.2/lib/classes/planAhead.jar
Vivado log file location: 	Z:/CS-401-1-CompArch/MIPS_3/mips_fpga_nexsys4_ddr/vivado.log
Vivado journal file location: 	Z:/CS-401-1-CompArch/MIPS_3/mips_fpga_nexsys4_ddr/vivado.jou
Engine tmp dir: 	Z:/CS-401-1-CompArch/MIPS_3/mips_fpga_nexsys4_ddr/.Xil/Vivado-992-LAB-SCI-214-07

Xilinx Environment Variables
----------------------------
VK_SDK_PATH: C:\Dev\1.1.77.0
VULKAN_SDK: C:\Dev\1.1.77.0
XILINX: C:/Xilinx/Vivado/2018.2/ids_lite/ISE
XILINX_DSP: C:/Xilinx/Vivado/2018.2/ids_lite/ISE
XILINX_PLANAHEAD: C:/Xilinx/Vivado/2018.2
XILINX_SDK: C:/Xilinx/SDK/2018.2
XILINX_VIVADO: C:/Xilinx/Vivado/2018.2
XILINX_VIVADO_HLS: C:/Xilinx/Vivado/2018.2


GUI allocated memory:	204 MB
GUI max memory:		3,052 MB
Engine allocated memory: 513 MB

Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.

*/

// TclEventType: START_GUI
// Tcl Message: start_gui 
// TclEventType: PROJECT_OPEN_DIALOG
// bx (ck):  Open Project : addNotify
// Opening Vivado Project: Z:\CS-401-1-CompArch\MIPS_3\mips_fpga_nexsys4_ddr\mips.xpr. Version: Vivado v2018.2.1 
// [GUI Memory]: 60 MB (+60046kb) [00:00:07]
// [Engine Memory]: 483 MB (+355322kb) [00:00:07]
// TclEventType: DEBUG_PROBE_SET_CHANGE
// Tcl Message: open_project Z:/CS-401-1-CompArch/MIPS_3/mips_fpga_nexsys4_ddr/mips.xpr 
// TclEventType: MSGMGR_MOVEMSG
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_NEW
// Tcl Message: open_project Z:/CS-401-1-CompArch/MIPS_3/mips_fpga_nexsys4_ddr/mips.xpr 
// Tcl Message: INFO: [Project 1-313] Project file moved from 'Z:/CS-401-1-CompArch/Lab03/mips_fpga_nexsys4_ddr' since last save. 
// Tcl Message: Scanning sources... Finished scanning sources 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified 
// Tcl Message: INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2018.2/data/ip'. 
// TclEventType: PROJECT_NEW
// [GUI Memory]: 83 MB (+21588kb) [00:00:11]
// [Engine Memory]: 583 MB (+79389kb) [00:00:11]
// [Engine Memory]: 614 MB (+1324kb) [00:00:14]
// HMemoryUtils.trashcanNow. Engine heap size: 620 MB. GUI used memory: 43 MB. Current time: 3/2/19 3:33:15 PM PST
// Tcl Message: open_project: Time (s): cpu = 00:00:14 ; elapsed = 00:00:08 . Memory (MB): peak = 894.203 ; gain = 156.871 
// Project name: mips; location: Z:/CS-401-1-CompArch/MIPS_3/mips_fpga_nexsys4_ddr; part: xc7a100tcsg324-1
dismissDialog("Open Project"); // bx (ck)
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 179 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd)]", 1, true); // B (D, ck) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd)]", 1, true); // B (D, ck) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd)]", 1, true, false, false, false, false, true); // B (D, ck) - Double Click - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd), mips1 : mips_top(mips_top) (mips_top.vhd)]", 2, true); // B (D, ck) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd), mips1 : mips_top(mips_top) (mips_top.vhd)]", 2, true, false, false, false, false, true); // B (D, ck) - Double Click - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd), mips1 : mips_top(mips_top) (mips_top.vhd), mips1 : mips(struct) (mips.vhd)]", 3); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd), mips1 : mips_top(mips_top) (mips_top.vhd), mips1 : mips(struct) (mips.vhd), cont : controller(struct) (mips_controller.vhd)]", 4, true); // B (D, ck) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd), mips1 : mips_top(mips_top) (mips_top.vhd), mips1 : mips(struct) (mips.vhd), cont : controller(struct) (mips_controller.vhd)]", 4, true, false, false, false, false, true); // B (D, ck) - Double Click - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd), mips1 : mips_top(mips_top) (mips_top.vhd), mips1 : mips(struct) (mips.vhd), cont : controller(struct) (mips_controller.vhd), md : maindec(behave) (mips_decoder_main.vhd)]", 5, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd), mips1 : mips_top(mips_top) (mips_top.vhd), mips1 : mips(struct) (mips.vhd), cont : controller(struct) (mips_controller.vhd), md : maindec(behave) (mips_decoder_main.vhd)]", 5, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd), mips1 : mips_top(mips_top) (mips_top.vhd), mips1 : mips(struct) (mips.vhd), cont : controller(struct) (mips_controller.vhd)]", 4, true); // B (D, ck) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd), mips1 : mips_top(mips_top) (mips_top.vhd), mips1 : mips(struct) (mips.vhd), cont : controller(struct) (mips_controller.vhd)]", 4, true, false, false, false, false, true); // B (D, ck) - Double Click - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd), mips1 : mips_top(mips_top) (mips_top.vhd), mips1 : mips(struct) (mips.vhd), cont : controller(struct) (mips_controller.vhd)]", 4); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd), mips1 : mips_top(mips_top) (mips_top.vhd), mips1 : mips(struct) (mips.vhd), cont : controller(struct) (mips_controller.vhd), md : maindec(behave) (mips_decoder_main.vhd)]", 5, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd), mips1 : mips_top(mips_top) (mips_top.vhd), mips1 : mips(struct) (mips.vhd), cont : controller(struct) (mips_controller.vhd), md : maindec(behave) (mips_decoder_main.vhd)]", 5, false, false, false, false, false, true); // B (D, ck) - Double Click
selectCodeEditor("mips_decoder_main.vhd", 341, 363); // ce (w, ck)
selectCodeEditor("mips_decoder_main.vhd", 253, 363); // ce (w, ck)
selectCodeEditor("mips_decoder_main.vhd", 422, 367); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// [GUI Memory]: 88 MB (+846kb) [00:03:55]
// HMemoryUtils.trashcanNow. Engine heap size: 642 MB. GUI used memory: 46 MB. Current time: 3/2/19 3:36:56 PM PST
// [Engine Memory]: 646 MB (+1251kb) [00:04:26]
// Elapsed time: 39 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd), mips1 : mips_top(mips_top) (mips_top.vhd), mips1 : mips(struct) (mips.vhd), cont : controller(struct) (mips_controller.vhd), ad : aludec(behave) (mips_decoder_alu.vhd)]", 6, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd), mips1 : mips_top(mips_top) (mips_top.vhd), mips1 : mips(struct) (mips.vhd), cont : controller(struct) (mips_controller.vhd), ad : aludec(behave) (mips_decoder_alu.vhd)]", 6, false, false, false, false, false, true); // B (D, ck) - Double Click
selectCodeEditor("mips_decoder_alu.vhd", 435, 249); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 36 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mips_decoder_main.vhd", 4); // k (j, ck)
// Elapsed time: 24 seconds
selectCodeEditor("mips_decoder_main.vhd", 304, 211); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// [GUI Memory]: 94 MB (+1494kb) [00:05:56]
// Elapsed time: 41 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mips_decoder_alu.vhd", 5); // k (j, ck)
// Elapsed time: 18 seconds
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd), mips1 : mips_top(mips_top) (mips_top.vhd), mips1 : mips(struct) (mips.vhd), dp : datapath(struct) (mips_datapath.vhd)]", 7); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd), mips1 : mips_top(mips_top) (mips_top.vhd), mips1 : mips(struct) (mips.vhd), dp : datapath(struct) (mips_datapath.vhd), mainalu : alu(behave) (mips_alu.vhd)]", 19, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, computer_top(computer_top) (computer_top.vhd), mips1 : mips_top(mips_top) (mips_top.vhd), mips1 : mips(struct) (mips.vhd), dp : datapath(struct) (mips_datapath.vhd), mainalu : alu(behave) (mips_alu.vhd)]", 19, false, false, false, false, false, true); // B (D, ck) - Double Click
selectCodeEditor("mips_alu.vhd", 173, 373); // ce (w, ck)
// Elapsed time: 20 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mips_decoder_main.vhd", 4); // k (j, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mips_decoder_alu.vhd", 5); // k (j, ck)
selectCodeEditor("mips_decoder_alu.vhd", 87, 266); // ce (w, ck)
selectCodeEditor("mips_decoder_alu.vhd", 247, 261); // ce (w, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mips_alu.vhd", 6); // k (j, ck)
selectCodeEditor("mips_alu.vhd", 389, 183); // ce (w, ck)
selectCodeEditor("mips_alu.vhd", 140, 310); // ce (w, ck)
selectCodeEditor("mips_alu.vhd", 199, 319); // ce (w, ck)
selectCodeEditor("mips_alu.vhd", 136, 315); // ce (w, ck)
selectCodeEditor("mips_alu.vhd", 413, 297); // ce (w, ck)
// Elapsed time: 18 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mips_decoder_main.vhd", 4); // k (j, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mips_decoder_alu.vhd", 5); // k (j, ck)
selectCodeEditor("mips_decoder_alu.vhd", 242, 232); // ce (w, ck)
selectCodeEditor("mips_decoder_alu.vhd", 247, 252); // ce (w, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mips_alu.vhd", 6); // k (j, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mips_decoder_alu.vhd", 5); // k (j, ck)
selectCodeEditor("mips_decoder_alu.vhd", 245, 227); // ce (w, ck)
selectCodeEditor("mips_decoder_alu.vhd", 245, 252); // ce (w, ck)
selectCodeEditor("mips_decoder_alu.vhd", 245, 264); // ce (w, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mips_alu.vhd", 6); // k (j, ck)
selectCodeEditor("mips_alu.vhd", 156, 339); // ce (w, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mips_decoder_alu.vhd", 5); // k (j, ck)
selectCodeEditor("mips_decoder_alu.vhd", 245, 229); // ce (w, ck)
selectCodeEditor("mips_decoder_alu.vhd", 244, 249); // ce (w, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mips_alu.vhd", 6); // k (j, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mips_decoder_alu.vhd", 5); // k (j, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mips_decoder_main.vhd", 4); // k (j, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mips_alu.vhd", 6); // k (j, ck)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mips_decoder_alu.vhd", 5); // k (j, ck)
selectCodeEditor("mips_decoder_alu.vhd", 252, 267); // ce (w, ck)
selectCodeEditor("mips_decoder_alu.vhd", 728, 277); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// [GUI Memory]: 99 MB (+534kb) [00:09:00]
// Elapsed time: 16 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mips_alu.vhd", 6); // k (j, ck)
selectCodeEditor("mips_alu.vhd", 227, 365); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 28 seconds
selectCodeEditor("mips_alu.vhd", 256, 215); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6590 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 8686 ms to process. Increasing delay to 2000 ms.
// WARNING: HTimer (ExpRunMonitor Open Timer) is taking 9999ms to process. Increasing delay to 6000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 13729 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 13752 ms. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 12322 ms. Increasing delay to 3000 ms.
// WARNING: HTimer (HSTRUtils Dump STR Log Timer) is taking 4624ms to process. Increasing delay to 4000 ms.
// WARNING: HTimer (ExpRunMonitor Open Timer) is taking 2882ms to process. Increasing delay to 7000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 7280 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3276 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6216 ms. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6247 ms. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 33297 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 27027 ms to process. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 27029 ms to process. Increasing delay to 4000 ms.
// WARNING: HTimer (ExpRunMonitor Open Timer) is taking 35316ms to process. Increasing delay to 8000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 34352 ms. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 36549 ms. Increasing delay to 5000 ms.
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// HMemoryUtils.trashcanNow. Engine heap size: 647 MB. GUI used memory: 47 MB. Current time: 3/2/19 4:06:56 PM PST
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2266 ms to process. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2267 ms to process. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2271 ms to process. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6845 ms. Increasing delay to 6000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6727 ms. Increasing delay to 6000 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 647 MB. GUI used memory: 45 MB. Current time: 3/2/19 4:36:56 PM PST
// Elapsed time: 3513 seconds
typeControlKey((HResource) null, "mips_alu.vhd", 'c'); // ce (w, ck)
